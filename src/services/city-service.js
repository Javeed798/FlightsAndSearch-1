const {CityRepository} = require("../repository/index");class CityService {   constructor() {      this.cityRepository = new CityRepository();   }      async createCity(data) {      try {         const city = await this.cityRepository.createCity(data)         return city;      } catch (err) {         console.log("Something went wrong creating city");         throw {err};      }   }      async deleteCity(cityId) {      try {         const response = await this.cityRepository.deleteCity(cityId)         return response;      } catch (err) {         console.log("Something went wrong deleting city");         throw {err};      }   }      async updateCity(cityId, data) {      try {         const response = await this.cityRepository.updateCity(cityId, data);         return response;      } catch (err) {         console.log("Something went wrong updating city");         throw {err};      }   }      async getCity(cityId) {      try {         const response = await this.cityRepository.getCity(cityId);         return response;      } catch (err) {         console.log("Something went wrong fetching city");         throw {err};      }   }      async getAllCities(filter) {      try {         const cities = await this.cityRepository.getAllCities({name: filter.name});         return cities;      } catch (err) {         console.log("Something went wrong fetching all cities");         throw {err};      }   }}module.exports = CityService;