const {Airport} = require("../models/index");const {Op} = require("sequelize");class AirportRepository {      async create(data) {      try {         const response = await Airport.create(data);         return response;      } catch (err) {         console.log(err)         throw {err};      }   }      async deleteAirport(airportId) {      try {         await Airport.destroy({            where: {               id: airportId,            }         });         return true;      } catch (err) {         console.log(err)         throw (err);      }   }      async updateAirport(airportId, data) {      try {         const response = await Airport.findByPk(airportId);         response.name = data.name;         response.address = data.address;         await response.save();         return response;      } catch (err) {         console.log(err)         throw (err);      }   }      async getAllAirports(filter) {      try {         if (filter.name) {            return await Airport.findAll({               where: {                  name: {                     [Op.startsWith]: filter.name,                  }               }            });         }         const response = await Airport.findAll();         return response;      } catch (err) {         console.log(err)         throw {err};      }   }      async getAirport(airportId) {      try {         const response = await Airport.findByPk(airportId);         return response;      } catch (err) {         console.log(err)         throw {err};      }   }   }module.exports = AirportRepository;